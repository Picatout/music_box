C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/15/2018 11:50:34 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Jacques
                    -\SimplicityStudio\v4_workspace\music_box\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOAT
                    -FUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Jacques\SimplicityStudio\v4_wor
                    -kspace\music_box\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.0//Device/shared/si8051base;C:/SiliconL
                    -abs/SimplicityStudio/v4/developer/sdks/8051/v4.1.0//Device/EFM8BB1/inc) REGFILE(music_box.ORC) PRINT(.\src\InitDevice.ls
                    -t) COND CODE PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              WDT_0_enter_DefaultMode_from_RESET();
  25   1              PORTS_0_enter_DefaultMode_from_RESET();
  26   1              PORTS_1_enter_DefaultMode_from_RESET();
  27   1              PBCFG_0_enter_DefaultMode_from_RESET();
  28   1              CLOCK_0_enter_DefaultMode_from_RESET();
  29   1              TIMER01_0_enter_DefaultMode_from_RESET();
  30   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  31   1              PCA_0_enter_DefaultMode_from_RESET();
  32   1              PCACH_0_enter_DefaultMode_from_RESET();
  33   1              PCACH_1_enter_DefaultMode_from_RESET();
  34   1              // [Config Calls]$
  35   1      
  36   1      }
  37          
  38          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  39   1              // $[WDTCN - Watchdog Timer Control]
  40   1              //Disable Watchdog with key sequence
  41   1              WDTCN = 0xDE; //First key
  42   1              WDTCN = 0xAD; //Second key
  43   1              // [WDTCN - Watchdog Timer Control]$
  44   1      
  45   1      }
  46          
  47          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  48   1              // $[P0 - Port 0 Pin Latch]
  49   1              // [P0 - Port 0 Pin Latch]$
  50   1      
  51   1              // $[P0MDOUT - Port 0 Output Mode]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/15/2018 11:50:34 PAGE 2   

  52   1              // [P0MDOUT - Port 0 Output Mode]$
  53   1      
  54   1              // $[P0MDIN - Port 0 Input Mode]
  55   1              // [P0MDIN - Port 0 Input Mode]$
  56   1      
  57   1              // $[P0SKIP - Port 0 Skip]
  58   1              /***********************************************************************
  59   1               - P0.0 pin is skipped by the crossbar
  60   1               - P0.1 pin is skipped by the crossbar
  61   1               - P0.2 pin is skipped by the crossbar
  62   1               - P0.3 pin is skipped by the crossbar
  63   1               - P0.4 pin is skipped by the crossbar
  64   1               - P0.5 pin is skipped by the crossbar
  65   1               - P0.6 pin is skipped by the crossbar
  66   1               - P0.7 pin is skipped by the crossbar
  67   1               ***********************************************************************/
  68   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
  69   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
  70   1                              | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
  71   1              // [P0SKIP - Port 0 Skip]$
  72   1      
  73   1              // $[P0MASK - Port 0 Mask]
  74   1              // [P0MASK - Port 0 Mask]$
  75   1      
  76   1              // $[P0MAT - Port 0 Match]
  77   1              // [P0MAT - Port 0 Match]$
  78   1      
  79   1      }
  80          
  81          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
  82   1              // $[P1 - Port 1 Pin Latch]
  83   1              // [P1 - Port 1 Pin Latch]$
  84   1      
  85   1              // $[P1MDOUT - Port 1 Output Mode]
  86   1              /***********************************************************************
  87   1               - P1.0 output is push-pull
  88   1               - P1.1 output is push-pull
  89   1               - P1.2 output is open-drain
  90   1               - P1.3 output is open-drain
  91   1               ***********************************************************************/
  92   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
  93   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN;
  94   1              // [P1MDOUT - Port 1 Output Mode]$
  95   1      
  96   1              // $[P1MDIN - Port 1 Input Mode]
  97   1              // [P1MDIN - Port 1 Input Mode]$
  98   1      
  99   1              // $[P1SKIP - Port 1 Skip]
 100   1              /***********************************************************************
 101   1               - P1.0 pin is not skipped by the crossbar
 102   1               - P1.1 pin is skipped by the crossbar
 103   1               - P1.2 pin is skipped by the crossbar
 104   1               - P1.3 pin is skipped by the crossbar
 105   1               ***********************************************************************/
 106   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 107   1                              | P1SKIP_B3__SKIPPED;
 108   1              // [P1SKIP - Port 1 Skip]$
 109   1      
 110   1              // $[P1MASK - Port 1 Mask]
 111   1              // [P1MASK - Port 1 Mask]$
 112   1      
 113   1              // $[P1MAT - Port 1 Match]
 114   1              // [P1MAT - Port 1 Match]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/15/2018 11:50:34 PAGE 3   

 115   1      
 116   1      }
 117          
 118          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 119   1              // $[XBR2 - Port I/O Crossbar 2]
 120   1              /***********************************************************************
 121   1               - Weak Pullups enabled 
 122   1               - Crossbar enabled
 123   1               ***********************************************************************/
 124   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 125   1              // [XBR2 - Port I/O Crossbar 2]$
 126   1      
 127   1              // $[PRTDRV - Port Drive Strength]
 128   1              // [PRTDRV - Port Drive Strength]$
 129   1      
 130   1              // $[XBR0 - Port I/O Crossbar 0]
 131   1              // [XBR0 - Port I/O Crossbar 0]$
 132   1      
 133   1              // $[XBR1 - Port I/O Crossbar 1]
 134   1              /***********************************************************************
 135   1               - CEX0 routed to Port pin
 136   1               - ECI unavailable at Port pin
 137   1               - T0 unavailable at Port pin
 138   1               - T1 unavailable at Port pin
 139   1               - T2 unavailable at Port pin
 140   1               ***********************************************************************/
 141   1              XBR1 = XBR1_PCA0ME__CEX0 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 142   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 143   1              // [XBR1 - Port I/O Crossbar 1]$
 144   1      
 145   1      }
 146          
 147          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 148   1              // $[CLKSEL - Clock Select]
 149   1              /***********************************************************************
 150   1               - Clock derived from the Internal High-Frequency Oscillator
 151   1               - SYSCLK is equal to selected clock source divided by 16
 152   1               ***********************************************************************/
 153   1              CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_16;
 154   1              // [CLKSEL - Clock Select]$
 155   1      
 156   1      }
 157          
 158          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
 159   1              // $[PCA Off]
 160   1              PCA0CN0_CR = PCA0CN0_CR__STOP;
 161   1              // [PCA Off]$
 162   1      
 163   1              // $[PCA0MD - PCA Mode]
 164   1              // [PCA0MD - PCA Mode]$
 165   1      
 166   1              // $[PCA0CENT - PCA Center Alignment Enable]
 167   1              // [PCA0CENT - PCA Center Alignment Enable]$
 168   1      
 169   1              // $[PCA0CLR - PCA Comparator Clear Control]
 170   1              // [PCA0CLR - PCA Comparator Clear Control]$
 171   1      
 172   1              // $[PCA0L - PCA Counter/Timer Low Byte]
 173   1              // [PCA0L - PCA Counter/Timer Low Byte]$
 174   1      
 175   1              // $[PCA0H - PCA Counter/Timer High Byte]
 176   1              // [PCA0H - PCA Counter/Timer High Byte]$
 177   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/15/2018 11:50:34 PAGE 4   

 178   1              // $[PCA0POL - PCA Output Polarity]
 179   1              // [PCA0POL - PCA Output Polarity]$
 180   1      
 181   1              // $[PCA0PWM - PCA PWM Configuration]
 182   1              // [PCA0PWM - PCA PWM Configuration]$
 183   1      
 184   1              // $[PCA On]
 185   1              // [PCA On]$
 186   1      
 187   1      }
 188          
 189          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 190   1              // $[PCA0 Settings Save]
 191   1              // Select Capture/Compare register)
 192   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 193   1              // [PCA0 Settings Save]$
 194   1      
 195   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 196   1              /***********************************************************************
 197   1               - Disable negative edge capture
 198   1               - Disable CCF0 interrupts
 199   1               - Disable match function
 200   1               - 8 to 11-bit PWM selected
 201   1               - Disable positive edge capture
 202   1               - Enable comparator function
 203   1               - Enable PWM function
 204   1               - Enable toggle function
 205   1               ***********************************************************************/
 206   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 207   1                              | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT
 208   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__ENABLED
 209   1                              | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__ENABLED;
 210   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 211   1      
 212   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 213   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 214   1      
 215   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 216   1              /***********************************************************************
 217   1               - PCA Channel 0 Capture Module High Byte = 0x01
 218   1               ***********************************************************************/
 219   1              PCA0CPH0 = (0x01 << PCA0CPH0_PCA0CPH0__SHIFT);
 220   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 221   1      
 222   1              // $[Auto-reload]
 223   1              // [Auto-reload]$
 224   1      
 225   1              // $[PCA0 Settings Restore]
 226   1              // [PCA0 Settings Restore]$
 227   1      
 228   1      }
 229          
 230          extern void PCACH_1_enter_DefaultMode_from_RESET(void) {
 231   1              // $[PCA0 Settings Save]
 232   1              // Select Capture/Compare register)
 233   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 234   1              // [PCA0 Settings Save]$
 235   1      
 236   1              // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 237   1              /***********************************************************************
 238   1               - Disable negative edge capture
 239   1               - Disable CCF1 interrupts
 240   1               - Enable match function
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/15/2018 11:50:34 PAGE 5   

 241   1               - 8 to 11-bit PWM selected
 242   1               - Disable positive edge capture
 243   1               - Disable comparator function
 244   1               - Disable PWM function
 245   1               - Disable toggle function
 246   1               ***********************************************************************/
 247   1              PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 248   1                              | PCA0CPM1_MAT__ENABLED | PCA0CPM1_PWM16__8_BIT
 249   1                              | PCA0CPM1_CAPP__DISABLED | PCA0CPM1_ECOM__DISABLED
 250   1                              | PCA0CPM1_PWM__DISABLED | PCA0CPM1_TOG__DISABLED;
 251   1              // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 252   1      
 253   1              // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 254   1              // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 255   1      
 256   1              // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 257   1              // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 258   1      
 259   1              // $[Auto-reload]
 260   1              // [Auto-reload]$
 261   1      
 262   1              // $[PCA0 Settings Restore]
 263   1              // [PCA0 Settings Restore]$
 264   1      
 265   1      }
 266          
 267          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 268   1              // $[EIE1 - Extended Interrupt Enable 1]
 269   1              /***********************************************************************
 270   1               - Disable ADC0 Conversion Complete interrupt
 271   1               - Disable ADC0 Window Comparison interrupt
 272   1               - Disable CP0 interrupts
 273   1               - Disable CP1 interrupts
 274   1               - Disable all Port Match interrupts
 275   1               - Enable interrupt requests generated by PCA0
 276   1               - Disable all SMB0 interrupts
 277   1               - Disable Timer 3 interrupts
 278   1               ***********************************************************************/
 279   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 280   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__ENABLED
 281   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 282   1              // [EIE1 - Extended Interrupt Enable 1]$
 283   1      
 284   1              // $[EIP1 - Extended Interrupt Priority 1]
 285   1              // [EIP1 - Extended Interrupt Priority 1]$
 286   1      
 287   1              // $[IE - Interrupt Enable]
 288   1              /***********************************************************************
 289   1               - Enable each interrupt according to its individual mask setting
 290   1               - Disable external interrupt 0
 291   1               - Disable external interrupt 1
 292   1               - Disable all SPI0 interrupts
 293   1               - Disable all Timer 0 interrupt
 294   1               - Disable all Timer 1 interrupt
 295   1               - Disable Timer 2 interrupt
 296   1               - Disable UART0 interrupt
 297   1               ***********************************************************************/
 298   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 299   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 300   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 301   1              // [IE - Interrupt Enable]$
 302   1      
 303   1              // $[IP - Interrupt Priority]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/15/2018 11:50:34 PAGE 6   

 304   1              // [IP - Interrupt Priority]$
 305   1      
 306   1      }
 307          
 308          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 309   1              // $[Timer Initialization]
 310   1              //Save Timer Configuration
 311   1              uint8_t TCON_save;
 312   1              TCON_save = TCON;
 313   1              //Stop Timers
 314   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 315   1      
 316   1              // [Timer Initialization]$
 317   1      
 318   1              // $[TH0 - Timer 0 High Byte]
 319   1              // [TH0 - Timer 0 High Byte]$
 320   1      
 321   1              // $[TL0 - Timer 0 Low Byte]
 322   1              // [TL0 - Timer 0 Low Byte]$
 323   1      
 324   1              // $[TH1 - Timer 1 High Byte]
 325   1              /***********************************************************************
 326   1               - Timer 1 High Byte = 0xFF
 327   1               ***********************************************************************/
 328   1              TH1 = (0xFF << TH1_TH1__SHIFT);
 329   1              // [TH1 - Timer 1 High Byte]$
 330   1      
 331   1              // $[TL1 - Timer 1 Low Byte]
 332   1              /***********************************************************************
 333   1               - Timer 1 Low Byte = 0x80
 334   1               ***********************************************************************/
 335   1              TL1 = (0x80 << TL1_TL1__SHIFT);
 336   1              // [TL1 - Timer 1 Low Byte]$
 337   1      
 338   1              // $[Timer Restoration]
 339   1              //Restore Timer Configuration
 340   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 341   1      
 342   1              // [Timer Restoration]$
 343   1      
 344   1      }
 345          
 346          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 347   1              // $[CKCON0 - Clock Control 0]
 348   1              /***********************************************************************
 349   1               - System clock divided by 12
 350   1               - Counter/Timer 0 uses the system clock
 351   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 352   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 353   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 354   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 355   1               - Timer 1 uses the clock defined by the prescale field, SCA
 356   1               ***********************************************************************/
 357   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__SYSCLK
 358   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 359   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 360   1                              | CKCON0_T1M__PRESCALE;
 361   1              // [CKCON0 - Clock Control 0]$
 362   1      
 363   1              // $[TMOD - Timer 0/1 Mode]
 364   1              /***********************************************************************
 365   1               - Mode 1, 16-bit Counter/Timer
 366   1               - Mode 1, 16-bit Counter/Timer
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/15/2018 11:50:34 PAGE 7   

 367   1               - Timer Mode
 368   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 369   1               - Timer Mode
 370   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 371   1               ***********************************************************************/
 372   1              TMOD = TMOD_T0M__MODE1 | TMOD_T1M__MODE1 | TMOD_CT0__TIMER
 373   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 374   1              // [TMOD - Timer 0/1 Mode]$
 375   1      
 376   1              // $[TCON - Timer 0/1 Control]
 377   1              // [TCON - Timer 0/1 Control]$
 378   1      
 379   1      }
 380          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/15/2018 11:50:34 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 24
0000 120000      R     LCALL   WDT_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 25
0003 120000      R     LCALL   PORTS_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 26
0006 120000      R     LCALL   PORTS_1_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 27
0009 120000      R     LCALL   PBCFG_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 28
000C 120000      R     LCALL   CLOCK_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 29
000F 120000      R     LCALL   TIMER01_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 30
0012 120000      R     LCALL   TIMER_SETUP_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 31
0015 120000      R     LCALL   PCA_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 32
0018 120000      R     LCALL   PCACH_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 33
001B 020000      R     LJMP    PCACH_1_enter_DefaultMode_from_RESET
             ; FUNCTION enter_DefaultMode_from_RESET (END)

             ; FUNCTION WDT_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 41
0000 7597DE            MOV     WDTCN,#0DEH
                                           ; SOURCE LINE # 42
0003 7597AD            MOV     WDTCN,#0ADH
                                           ; SOURCE LINE # 45
0006 22                RET     
             ; FUNCTION WDT_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PORTS_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 68
0000 75D4FF            MOV     P0SKIP,#0FFH
                                           ; SOURCE LINE # 79
0003 22                RET     
             ; FUNCTION PORTS_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PORTS_1_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 92
0000 75A503            MOV     P1MDOUT,#03H
                                           ; SOURCE LINE # 106
0003 75D50E            MOV     P1SKIP,#0EH
                                           ; SOURCE LINE # 116
0006 22                RET     
             ; FUNCTION PORTS_1_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PBCFG_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 124
0000 75E340            MOV     XBR2,#040H
                                           ; SOURCE LINE # 141
0003 75E201            MOV     XBR1,#01H
                                           ; SOURCE LINE # 145
0006 22                RET     
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/15/2018 11:50:34 PAGE 9   

             ; FUNCTION PBCFG_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION CLOCK_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 153
0000 75A940            MOV     CLKSEL,#040H
                                           ; SOURCE LINE # 156
0003 22                RET     
             ; FUNCTION CLOCK_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCA_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 158
                                           ; SOURCE LINE # 160
0000 C2DE              CLR     PCA0CN0_CR
                                           ; SOURCE LINE # 187
0002 22                RET     
             ; FUNCTION PCA_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCACH_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 192
0000 53F77F            ANL     PCA0PWM,#07FH
                                           ; SOURCE LINE # 206
0003 75DA46            MOV     PCA0CPM0,#046H
                                           ; SOURCE LINE # 219
0006 75FC01            MOV     PCA0CPH0,#01H
                                           ; SOURCE LINE # 228
0009 22                RET     
             ; FUNCTION PCACH_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCACH_1_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 233
0000 53F77F            ANL     PCA0PWM,#07FH
                                           ; SOURCE LINE # 247
0003 75DB08            MOV     PCA0CPM1,#08H
                                           ; SOURCE LINE # 265
0006 22                RET     
             ; FUNCTION PCACH_1_enter_DefaultMode_from_RESET (END)

             ; FUNCTION INTERRUPT_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 267
                                           ; SOURCE LINE # 279
0000 75E610            MOV     EIE1,#010H
                                           ; SOURCE LINE # 298
0003 75A880            MOV     IE,#080H
                                           ; SOURCE LINE # 306
0006 22                RET     
             ; FUNCTION INTERRUPT_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER01_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 312
;---- Variable 'TCON_save' assigned to Register 'R7' ----
0000 AF88              MOV     R7,TCON
                                           ; SOURCE LINE # 314
0002 5388AF            ANL     TCON,#0AFH
                                           ; SOURCE LINE # 328
0005 758DFF            MOV     TH1,#0FFH
                                           ; SOURCE LINE # 335
0008 758B80            MOV     TL1,#080H
                                           ; SOURCE LINE # 340
000B EF                MOV     A,R7
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/15/2018 11:50:34 PAGE 10  

000C 5440              ANL     A,#040H
000E FE                MOV     R6,A
000F EF                MOV     A,R7
0010 5410              ANL     A,#010H
0012 4E                ORL     A,R6
0013 4288              ORL     TCON,A
                                           ; SOURCE LINE # 344
0015 22                RET     
             ; FUNCTION TIMER01_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER_SETUP_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 357
0000 758E04            MOV     CKCON0,#04H
                                           ; SOURCE LINE # 372
0003 758911            MOV     TMOD,#011H
                                           ; SOURCE LINE # 379
0006 22                RET     
             ; FUNCTION TIMER_SETUP_0_enter_DefaultMode_from_RESET (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    115    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
